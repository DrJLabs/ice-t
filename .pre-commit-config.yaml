# Pre-commit hooks for ice-t Development Environment
# Optimized configuration for AI agent compatibility and reliability

repos:
  # Built-in hooks for basic file hygiene
  - repo: local
    hooks:
      # File formatting and cleanup
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
        entry: python3 tools/pre_commit_helpers.py trailing-whitespace
        language: system
        types: [text]
        stages: [pre-commit, manual]

      - id: end-of-file-fixer
        name: Fix End of Files
        entry: python3 tools/pre_commit_helpers.py end-of-file
        language: system
        types: [text]
        stages: [pre-commit, manual]

      - id: check-yaml
        name: Check YAML
        entry: python3 tools/pre_commit_helpers.py check-yaml
        language: system
        files: \.(yaml|yml)$
        stages: [pre-commit, manual]

      - id: check-json
        name: Check JSON
        entry: python3 tools/pre_commit_helpers.py check-json
        language: system
        files: \.json$
        stages: [pre-commit, manual]

      - id: check-merge-conflict
        name: Check for merge conflicts
        entry: python3 tools/pre_commit_helpers.py check-merge-conflict
        language: system
        types: [text]
        stages: [pre-commit, manual]

      # Python code formatting and linting with Ruff
      - id: ruff-check
        name: Ruff Linter (Check & Fix)
        entry: sh
        args: ['-c', 'if command -v ruff >/dev/null 2>&1; then ruff check --fix --exit-zero --show-fixes "$@"; else echo "⚠️ ruff not available - install with: pip install ruff"; fi', '--']
        language: system
        types: [python]
        stages: [pre-commit, manual]

      - id: ruff-format
        name: Ruff Formatter
        entry: sh
        args: ['-c', 'if command -v ruff >/dev/null 2>&1; then ruff format "$@"; else echo "⚠️ ruff not available - install with: pip install ruff"; fi', '--']
        language: system
        types: [python]
        stages: [pre-commit, manual]

      # Type checking with MyPy
      - id: mypy
        name: MyPy Type Checking
        entry: sh
        args: ['-c', 'if command -v mypy >/dev/null 2>&1; then mypy --config-file=pyproject.toml "$@"; else echo "⚠️ mypy not available - install with: pip install mypy"; fi', '--']
        language: system
        types: [python]
        files: ^src/
        stages: [pre-commit, manual]

      # Fast syntax check for all Python files
      - id: python-check-ast
        name: Check Python AST
        entry: python3
        args: ['-m', 'py_compile']
        language: system
        types: [python]
        stages: [pre-commit, manual]

      # Security check (basic patterns)
      - id: security-check
        name: Basic Security Check
        entry: python3 tools/pre_commit_helpers.py security-check
        language: system
        types: [python]
        stages: [pre-commit, manual]

      # ice-t smoke tests
      - id: ice-t-smoke-tests
        name: ice-t Smoke Tests
        entry: sh
        args: ['-c', 'if [ -f "scripts/adaptive_test_runner.py" ]; then python3 scripts/adaptive_test_runner.py run --smoke; else echo "⚠️ adaptive_test_runner.py not found - skipping smoke tests"; fi']
        language: system
        pass_filenames: false
        stages: [pre-commit, manual]

# Pre-commit configuration
default_stages: [pre-commit]
fail_fast: false  # Continue running hooks even if one fails
minimum_pre_commit_version: "3.0.0"

# Exclude patterns
exclude: |
  (?x)^(
    \.venv/.*|
    venv/.*|
    .*\.min\.js|
    .*\.min\.css|
    .*/migrations/.*|
    .*/node_modules/.*|
    build/.*|
    dist/.*|
    logs/.*|
    \.coverage.*|
    htmlcov/.*|
    __pycache__/.*|
    .*\.pyc$|
    .*\.pyo$|
    \.git/.*
  )$
