---
name: save-failed-log
on:
  workflow_run:
    workflows: ["ðŸš€ Turbo CI - ice-t Persistent Runners"]
    types: [completed]

jobs:
  persist:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
    steps:
      - name: Check out failing branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Extract errors
        env:
          RUN_ID: ${{ github.event.workflow_run.id }}
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          mkdir -p .codex/errors
          echo "Fetching log for run ID: $RUN_ID"
          gh run view "$RUN_ID" --log > /tmp/full.log
          echo "Extracting error summary..."
          awk '/error/{c=20} c-->0' /tmp/full.log > ".codex/errors/ci_${RUN_ID}.log"
          echo "Error summary extracted to .codex/errors/ci_${RUN_ID}.log"

      # â”€â”€â”€â”€â”€â”€ Extract error slice (previous step) â”€â”€â”€â”€â”€â”€
      - name: Stage new log and trim to 5 files
        env:
          RUN_ID: ${{ github.event.workflow_run.id }}
        run: |
          set -euo pipefail
          ERROR_DIR=".codex/errors"
          NEW_LOG="${ERROR_DIR}/ci_${RUN_ID}.log"

          # add newest log if it exists & not empty
          if [ -s "$NEW_LOG" ]; then
            git add -f "$NEW_LOG"
          else
            echo "::warning::${NEW_LOG} missing or empty â€“ skipping add"
          fi

          # trim to last 5 logs (newest first)
          if [ -d "$ERROR_DIR" ]; then
            ls -1t ${ERROR_DIR}/ci_*.log | tail -n +6 | xargs -r git rm -f --
          fi

      - id: commit_logs
        name: Commit log changes
        run: |
          set -euo pipefail
          git config user.name  "ice-t-bot"
          git config user.email "ice-t-bot@users.noreply.github.com"

          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit --no-verify -m "ci(errors): run ${RUN_ID}"
          fi

      - name: Push
        if: steps.commit_logs.outcome == 'success'
        run: git push