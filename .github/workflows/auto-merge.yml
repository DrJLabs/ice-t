name: 🤖 Auto-Merge Pull Requests

on:
  pull_request:
    types: [opened, ready_for_review, synchronize, reopened]
    branches: [main, develop]
  pull_request_review:
    types: [submitted, dismissed]
  check_suite:
    types: [completed]

env:
  PYTHONDONTWRITEBYTECODE: 1
  PYTHONUNBUFFERED: 1
  CI: true

# Ensure only one auto-merge workflow runs at a time per PR
concurrency:
  group: auto-merge-${{ github.event.pull_request.number || github.event.check_suite.pull_requests[0].number }}
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write
  checks: read
  statuses: read

jobs:
  # Determine if auto-merge should be enabled
  evaluate-auto-merge:
    name: 🔍 Evaluate Auto-Merge Eligibility
    runs-on: [self-hosted, linux]
    if: |
      github.event.pull_request.draft == false &&
      github.event.pull_request.state == 'open' &&
      !github.event.pull_request.locked
    outputs:
      should-auto-merge: ${{ steps.evaluate.outputs.should-auto-merge }}
      pr-number: ${{ steps.evaluate.outputs.pr-number }}
      pr-node-id: ${{ steps.evaluate.outputs.pr-node-id }}
      merge-method: ${{ steps.evaluate.outputs.merge-method }}
      reason: ${{ steps.evaluate.outputs.reason }}
    steps:
      - name: ⚡ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 🔍 Evaluate PR for auto-merge
        id: evaluate
        env:
          GH_TOKEN: ${{ github.token }}
        run: python scripts/evaluate_auto_merge.py

  # Enable auto-merge using GraphQL API (primary method)
  enable-auto-merge-graphql:
    name: 🚀 Enable Auto-Merge (GraphQL)
    runs-on: [self-hosted, linux]
    needs: evaluate-auto-merge
    if: needs.evaluate-auto-merge.outputs.should-auto-merge == 'true'
    steps:
      - name: 🤖 Enable auto-merge via GraphQL
        env:
          GH_TOKEN: ${{ github.token }}
          PR_NODE_ID: ${{ needs.evaluate-auto-merge.outputs.pr-node-id }}
          MERGE_METHOD: ${{ needs.evaluate-auto-merge.outputs.merge-method }}
        run: |
          echo "🚀 Enabling auto-merge for PR #${{ needs.evaluate-auto-merge.outputs.pr-number }}"
          echo "📦 Merge method: $MERGE_METHOD"

          # Enable auto-merge using GraphQL API
          RESULT=$(gh api graphql -F prId="$PR_NODE_ID" -F mergeMethod="$MERGE_METHOD" -f query='
            mutation($prId: ID!, $mergeMethod: PullRequestMergeMethod!) {
              enablePullRequestAutoMerge(input: {
                pullRequestId: $prId
                mergeMethod: $mergeMethod
              }) {
                pullRequest {
                  number
                  autoMergeRequest {
                    enabledAt
                    enabledBy {
                      login
                    }
                    mergeMethod
                  }
                }
              }
            }
          ')

          if echo "$RESULT" | jq -e '.data.enablePullRequestAutoMerge.pullRequest.autoMergeRequest' >/dev/null; then
            echo "✅ Auto-merge enabled successfully via GraphQL"
            ENABLED_AT=$(echo "$RESULT" | jq -r '.data.enablePullRequestAutoMerge.pullRequest.autoMergeRequest.enabledAt')
            echo "⏰ Enabled at: $ENABLED_AT"

            # Add success comment to PR
            gh pr comment ${{ needs.evaluate-auto-merge.outputs.pr-number }} --body \
              "🤖 **Auto-merge enabled** via GraphQL API

              - **Merge method**: $MERGE_METHOD
              - **Enabled at**: $ENABLED_AT
              - **Reason**: ${{ needs.evaluate-auto-merge.outputs.reason }}

              The PR will automatically merge when all required checks pass. ✅"
          else
            echo "❌ Failed to enable auto-merge via GraphQL"
            echo "Response: $RESULT"
            exit 1
          fi

  # Fallback: Enable auto-merge using marketplace action
  enable-auto-merge-action:
    name: 🔄 Enable Auto-Merge (Action Fallback)
    runs-on: [self-hosted, linux]
    needs: [evaluate-auto-merge, enable-auto-merge-graphql]
    if: |
      needs.evaluate-auto-merge.outputs.should-auto-merge == 'true' &&
      failure()
    steps:
      - name: 🔄 Enable auto-merge via marketplace action
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ github.token }}
          pull-request-number: ${{ needs.evaluate-auto-merge.outputs.pr-number }}
          merge-method: ${{ needs.evaluate-auto-merge.outputs.merge-method == 'SQUASH' && 'squash' || 'merge' }}

      - name: 📝 Add fallback success comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr comment ${{ needs.evaluate-auto-merge.outputs.pr-number }} --body \
            "🤖 **Auto-merge enabled** via marketplace action (fallback)

            - **Merge method**: ${{ needs.evaluate-auto-merge.outputs.merge-method }}
            - **Reason**: ${{ needs.evaluate-auto-merge.outputs.reason }}

            The PR will automatically merge when all required checks pass. ✅"

  # Auto-approve PRs from trusted sources (optional)
  auto-approve:
    name: ✅ Auto-Approve Trusted PRs
    runs-on: [self-hosted, linux]
    needs: evaluate-auto-merge
    if: |
      needs.evaluate-auto-merge.outputs.should-auto-merge == 'true' &&
      (contains(github.event.pull_request.head.ref, 'dependabot/') ||
       contains(github.event.pull_request.head.ref, 'cursor/') ||
       contains(github.event.pull_request.head.ref, 'codex/'))
    continue-on-error: true  # Don't fail the entire workflow if approval fails
    steps:
      - name: ✅ Auto-approve trusted PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Check if PR requires review and hasn't been approved yet
          REVIEW_STATUS=$(gh pr view ${{ needs.evaluate-auto-merge.outputs.pr-number }} --json reviewDecision --jq '.reviewDecision // "NONE"')

          if [[ "$REVIEW_STATUS" != "APPROVED" ]]; then
            echo "✅ Attempting to auto-approve trusted PR #${{ needs.evaluate-auto-merge.outputs.pr-number }}"

            # Try to approve the PR, but handle permission errors gracefully
            if gh pr review ${{ needs.evaluate-auto-merge.outputs.pr-number }} --approve --body \
              "🤖 **Automated approval** for trusted source

              This PR is from a trusted source and has been automatically approved.
              Auto-merge will proceed once all status checks pass." 2>/dev/null; then
              echo "✅ PR successfully auto-approved"
            else
              echo "⚠️ Could not auto-approve PR (likely permissions issue)"
              echo "💡 To enable auto-approval:"
              echo "   1. Go to Settings > Actions > General"
              echo "   2. Enable: 'Allow GitHub Actions to create and approve pull requests'"
              echo "   3. Auto-merge will still work, but manual approval may be required"

              # Add informational comment instead of approval
              gh pr comment ${{ needs.evaluate-auto-merge.outputs.pr-number }} --body \
                "🤖 **Auto-merge enabled** for trusted source

                ⚠️ Could not auto-approve due to permissions, but auto-merge is enabled.

          echo "- ✅ All required status checks must pass" >> $GITHUB_STEP_SUMMARY

      - name: "💬 Debug on failure"
        if: failure()
        shell: bash
        run: |
          set -euo pipefail
          python scripts/debug_ci.py > debug.log
      - name: "📤 Upload debug logs"
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-auto-merge-${{ github.run_id }}
          path: debug.log
          retention-days: 7

  comment-on-skip:
    name: "📝 Comment when Auto-Merge Skipped"
    runs-on: [self-hosted, linux]
    needs: evaluate-auto-merge
    if: needs.evaluate-auto-merge.outputs.should-auto-merge != 'true'
    steps:
      - name: "💬 Post skip comment"
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ needs.evaluate-auto-merge.outputs.pr-number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `❌ Auto-merge skipped: ${{ needs.evaluate-auto-merge.outputs.reason }}`
            });

